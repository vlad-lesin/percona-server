# This test is for debugging

--source include/have_rocksdb.inc


--let $MYSQLD_DATADIR=`select @@datadir`

--error ER_GET_ERRMSG
CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY) ENGINE=rocksdb DATA DIRECTORY =  '/foo/bar/data/';

--error ER_GET_ERRMSG
CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY) ENGINE=rocksdb PARTITION BY RANGE (id)
(
    PARTITION P0 VALUES LESS THAN (1000)
        DATA DIRECTORY =  '/foo/bar/data/',
    PARTITION P1 VALUES LESS THAN (2000)
        DATA DIRECTORY =  '/foo/bar/data/',
    PARTITION P2 VALUES LESS THAN (MAXVALUE)
);
--exit

--echo #
--echo # Issue#105: key_info[secondary_key].actual_key_parts does not include primary key on partitioned tables
--echo #
CREATE TABLE t1 (
 id INT PRIMARY KEY,
 a set ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')  CHARACTER SET utf8,
 b set ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')  CHARACTER SET utf8 default null,
 c set ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')  CHARACTER SET utf8 not null,
 INDEX (a),
 INDEX (b),
 INDEX (c)
) ENGINE=ROCKSDB PARTITION BY key (id) partitions 2;

INSERT INTO t1 (id, b, c) VALUES (28, 3, 3);
UPDATE t1 SET id=8 WHERE c < 8 LIMIT 1;
check table t1;
drop table t1;
--exit

--echo #
--echo # Issue #260: altering name to invalid value leaves table unaccessible
--echo #
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) ENGINE=ROCKSDB PARTITION BY HASH(c1) PARTITIONS 4;
INSERT INTO t1 VALUES(1,'a');
--error ER_ERROR_ON_RENAME
RENAME TABLE t1 TO db3.t3;
DROP TABLE t1;
--exit



create table t1 (a int unsigned not null,
                 b int unsigned not null,
                 c int unsigned not null,
                 primary key(a),index k_b_c (b, c)
                 ) engine=RocksDB
PARTITION BY RANGE (a)
SUBPARTITION BY HASH (a)
SUBPARTITIONS 3
(
    PARTITION p0 VALUES LESS THAN (100),
    PARTITION p1 VALUES LESS THAN (200),
    PARTITION p2 VALUES LESS THAN (300),
    PARTITION p3 VALUES LESS THAN (400)
);

SHOW CREATE TABLE t1;

--exit
--list_files $MYSQLD_DATADIR/test *


insert into t1 set a = 250, b = 250, c = 250;
insert into t1 set a = 255, b = 255, c = 255;
insert into t1 set a = 350, b = 350, c = 350;
insert into t1 set a = 355, b = 355, c = 355;
insert into t1 set a = 50, b = 50, c = 50;
insert into t1 set a = 55, b = 55, c = 55;

select * from t1;

select * from t1 where a = 355;

update t1 set a = 10 where a = 355;
select * from t1;

update t1 set a = a + 1;
select * from t1;

drop table t1;

--list_files $MYSQLD_DATADIR/test *

create table t1 (col1 int) engine='RocksDB' 
partition by range(abs(col1)) 
(partition p0 values less than (15),
partition p1 values less than maxvalue);
insert into t1 values (5 );
insert into t1 values (13 );
alter table t1 drop partition p0;
select * from t1 order by col1;
drop table t1;


--echo # 4.0 LIST partitioning mgm
--echo # Creating LIST partitioned table
CREATE TABLE TableA (a INT)
ENGINE = RocksDB
PARTITION BY LIST (a)
(PARTITION parta VALUES IN (1,3,5,7),
 PARTITION partb VALUES IN (2,4,6,8));
INSERT INTO TableA VALUES (1), (2), (3), (4);

SELECT * FROM TableA;

alter table TableA drop partition partb;

SELECT * FROM TableA;

SHOW CREATE TABLE TableA;
DROP TABLE `TableA`;
--exit


--echo # 4.0 LIST partitioning mgm
--echo # Creating LIST partitioned table
CREATE TABLE TableA (a INT)
ENGINE = RocksDB
PARTITION BY LIST (a)
(PARTITION parta VALUES IN (1,3,5,7),
 PARTITION partb VALUES IN (2,4,6,8));
INSERT INTO TableA VALUES (1), (2), (3), (4);
#INSERT INTO TableA VALUES (3), (4);

SELECT * FROM TableA;

ALTER TABLE TableA REORGANIZE PARTITION parta,partb INTO
(PARTITION parta VALUES IN (3),
 PARTITION partb VALUES IN (4));

SELECT * FROM TableA;

SHOW CREATE TABLE TableA;
DROP TABLE `TableA`;


create table t1 (a int not null, primary key(a)) engine=RocksDB
partition by hash (a) partitions 8192;

write_file $MYSQL_TMP_DIR/data01;
8191,
57343,
EOF
replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR;
eval load data infile '$MYSQL_TMP_DIR/data01' into table t1 partition (p8191) fields terminated by ',';
remove_file $MYSQL_TMP_DIR/data01;
select * from t1 partition (p8191);

drop table t1;

create table t1 (a int unsigned not null, primary key(a)) engine=RocksDB
PARTITION BY RANGE (a) (
    PARTITION p0 VALUES LESS THAN (100),
    PARTITION p1 VALUES LESS THAN (200),
    PARTITION p2 VALUES LESS THAN (300),
    PARTITION p3 VALUES LESS THAN (400)
);

insert into t1 set a = 250;
insert into t1 set a = 255;
insert into t1 set a = 350;
insert into t1 set a = 355;
insert into t1 set a = 50;
insert into t1 set a = 55;

create table t2 (a int unsigned not null, primary key(a)) engine=RocksDB;
--error ER_PARTITION_MGMT_ON_NONPARTITIONED
ALTER TABLE t1 EXCHANGE PARTITION p0 WITH TABLE t2;

ALTER TABLE t1 ADD COLUMN b INT UNSIGNED;
SHOW CREATE TABLE t1;

select * from t1;

ALTER TABLE t1 ADD PARTITION (PARTITION p4 VALUES LESS THAN (500));
ALTER TABLE t1 ADD PARTITION (PARTITION p5 VALUES LESS THAN (600));

insert into t1 set a = 450;

select * from t1;

ALTER TABLE t1 DROP PARTITION p5;

DROP TABLE t1;
DROP TABLE t2;



CREATE TABLE `t1` (
  `f_int1` int(11) DEFAULT NULL,
  `f_int2` int(11) DEFAULT NULL,
  `f_char1` char(20) DEFAULT NULL,
  `f_char2` char(20) DEFAULT NULL,
  `f_charbig` varchar(1000) DEFAULT NULL
) ENGINE=RocksDB
PARTITION BY RANGE (f_int1 DIV 2)
SUBPARTITION BY HASH (f_int1)
SUBPARTITIONS 2
(PARTITION parta VALUES LESS THAN (0) ENGINE = RocksDB,
 PARTITION partb VALUES LESS THAN (5) ENGINE = RocksDB,
 PARTITION partc VALUES LESS THAN (10) ENGINE = RocksDB,
 PARTITION partd VALUES LESS THAN (2147483646) ENGINE = RocksDB);

--list_files $MYSQLD_DATADIR/test *

ALTER TABLE t1 ADD UNIQUE INDEX uidx1 (f_int1,f_int2);

DROP TABLE t1;

--list_files $MYSQLD_DATADIR/test *

SHOW CREATE TABLE t1;


create table t1 (a int unsigned not null, primary key(a)) engine=RocksDB
PARTITION BY RANGE (a) (
    PARTITION p0 VALUES LESS THAN (100),
    PARTITION p1 VALUES LESS THAN (200),
    PARTITION p2 VALUES LESS THAN (300),
    PARTITION p3 VALUES LESS THAN (400)
);

--list_files $MYSQLD_DATADIR/test *

insert into t1 set a = 250;
insert into t1 set a = 255;
insert into t1 set a = 350;
insert into t1 set a = 355;
insert into t1 set a = 50;
insert into t1 set a = 55;

select * from t1;

select * from t1 where a = 355;

update t1 set a = 10 where a = 355;
select * from t1;

update t1 set a = a + 1;
select * from t1;

rename table t1 to t2;
--list_files $MYSQLD_DATADIR/test *
select * from t2;

ALTER TABLE t2 RENAME t1;

--list_files $MYSQLD_DATADIR/test *
select * from t1;

drop table t1;

